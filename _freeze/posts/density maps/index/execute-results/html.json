{
  "hash": "a2770d5201efe47e69be40c0d090bfda",
  "result": {
    "markdown": "---\ntitle: \"Road to density maps creation\"\nauthor: \"Adrian Manzanal\"\ndate: \"2023-11-31\"\ncategories: [news, maps, density functions]\nimage: \"title.jpg\"\n---\n\n\n# **Lets paint your density maps using R**\n**Different ways to create density maps**\n\nIt would be useful to prepare these libraries for next steps..\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(mapSpain)\nlibrary(ggmap)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(climaemet)\nlibrary(stars)\nlibrary(gstat)\n```\n:::\n\n\nSometimes datasets are not geolocated in a similar way. There are some areas crowed of data and other areas with no data.\nIn order to explain how to calculate the estimated information for these \"empty\" areas we are going to start using AEMET temperatures data by day and weather station:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n*To learn how to connect to \"climaemet\" package please see the previous post \"Handle climatic data using AEMET API\".*\n\n\n### 1. Extract clima data and Spain SF map.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n #Historical Date\n fecha_select <- \"2023-11-01\"\n \n #Extract clima data for this day:\n clim_data <- aemet_daily_clim(\n   start = fecha_select, end = fecha_select,\n   return_sf = TRUE\n )\n \n #Select min temperatures and remove Canary Islands:\n clim_data_clean <- clim_data  |> \n   filter(!provincia %in% c(\"LAS PALMAS\", \"STA. CRUZ DE TENERIFE\"))  |> \n   dplyr::select(fecha, tmin)  |> \n   filter(!is.na(tmin))\n \n #From mapSpain we download the SF:\n esp_sf <- esp_get_ccaa(epsg = 4326) |> \n   filter(ine.ccaa.name != \"Canarias\") \n```\n:::\n\n\n### 2. Create the GRID to interpolate/estimate data.\n\nTo interpolate data between weather stations it is important to create a grill. In order to adjust the same number of spaces we divided Spain area by small cells (10km)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmapa.sf <- st_as_sf(esp_sf, coords = geometry) # Spain map has been selected to be converted to SF\n\n\nst_bbox(mapa.sf) %>% \n  st_as_stars(mapa.sf = 10000) %>% # Using Spain SF object we are going to create 10 km cells grill.\nst_crop(mapa.sf) -> grd \n\nplot(grd, main=\"GRID\", col=\"cadetblue3\", breaks=\"equal\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n### 3. First interpolation Approach: Thiessen Polynomials.\n\nThis methodological approach allows us to create areas for this data point. These calculated areas are equivalent distributed depending the distance between each of the original points.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthiessen <- krige(tmin ~ 1, clim_data_clean, grd, nmax = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[inverse distance weighted interpolation]\n```\n:::\n\n```{.r .cell-code}\nplot(thiessen)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot() +\n  geom_stars(data = thiessen, aes(fill = var1.pred, x = x, y = y)) +\n  geom_sf(data = st_cast(esp_sf, \"MULTILINESTRING\")) +\n  geom_sf(data = clim_data_clean, color = \"#EE9322\") +\n  scale_fill_gradientn(colours = sf.colors(20), na.value=NA) +\n  theme_void() +\n  labs(\n    title = \"Minimal Temperatures\",\n    subtitle = \"December 2023\"\n  ) +\ntheme_void()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 35910 rows containing missing values (`geom_raster()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n### 4. IDW Interpolation\n\n\n::: {.cell}\n\n```{.r .cell-code}\ni = idw(tmin ~ 1, clim_data_clean, grd)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[inverse distance weighted interpolation]\n```\n:::\n\n```{.r .cell-code}\n  ## [inverse distance weighted interpolation]\nggplot() + geom_stars(data = i, aes(fill = var1.pred, x = x, y = y)) + # IDW Prediction\n  geom_sf(data = st_cast(mapa.sf, \"MULTILINESTRING\")) + # Spain map shape\n  xlab(\"Longitud\") + ylab(\"Latitud\") + # Axis names\n  labs(\n    title = \"Minimal Temperatures\",\n    subtitle = \"December 2023\"\n  )  + # Title\n  scale_fill_gradientn(colours = sf.colors(20), na.value=NA)+ # Colours\n  theme_void() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 35910 rows containing missing values (`geom_raster()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}